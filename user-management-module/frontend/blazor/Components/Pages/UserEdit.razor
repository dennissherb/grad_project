@page "/manage/user/edit/{UserId}"
@rendermode InteractiveServer
@attribute [StreamRendering(true)]

@using System.Text.Json
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject HttpClient httpClient
@inject Dictionary<string, string> userData
@inject ProtectedSessionStorage MySession
@inject NavigationManager Navman

<h3>User Edit</h3>
<p foreground-color="red">@errorMessage</p>

 @if (user == null)
{
    <p>Loading user data...</p>
}
else
{
    <div>
    @foreach (var kvp in user) {
            @switch (kvp.Key.ToString())
            {
                case "accounts_permgroup":
                    break;

                case "accounts_id":
                    break;

                case "accounts_password":
                    <label>@kvp.Key:</label>
                    <input type="password"/>
                    <p></p>
                    break;

                case "accounts_date_of_birth":
                    <label>@kvp.Key:</label>
                    <input type="date"/>
                    <p></p>
                    break;

                default:
					<label>@kvp.Key:</label>
                    <input type="text"/>
                    <p></p>
                    break;

            }
	}
    </div>
}

@code {
    public Dictionary<string,string> user;
    string errorMessage;

    [Parameter]
    public string UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
			user = await httpClient.GetFromJsonAsync<Dictionary<string, string>>($"http://localhost:5005/api/Account/GetByID/{UserId}");
        }
		catch (Exception ex)
        {
            errorMessage = "Exception was caught: " + ex.Message;
        }

        StateHasChanged();
    }

      

}