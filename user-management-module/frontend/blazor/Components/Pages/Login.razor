@page "/login"

@rendermode InteractiveServer

@using System.Text.Json
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject HttpClient httpClient
@inject Dictionary<string,string> userData 
@inject ProtectedSessionStorage MySession
@inject NavigationManager Navman

@if (@loggedIn) 
{
    <div id="ProtectedContent">
        <h3>Login</h3>
        @if (errorMessage != null)
        {
            <p style="color: red;">@errorMessage, @errorMessage_Session</p>
        }

        <form @onsubmit="HandleLogin">
            <label>
                Username:
                <input type="text" @bind="username" />
            </label><br />

            <label>
                Password:
                <input type="password" @bind="password" />
            </label><br />

            <button type="submit">Login</button>
        </form>
    </div>
}

@code {
    private string username;
    private string password;
    private string errorMessage;
    private string errorMessage_Session;

    protected bool loggedIn = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if ((await MySession.GetAsync<Dictionary<string,string>>("user")).Value != null && ((await MySession.GetAsync<Dictionary<string,string>>("user")).Value.ContainsKey("accounts_id"))) 
            Navman.NavigateTo("/");
        loggedIn = (await MySession.GetAsync<object>("user")).Value == null;
        if(firstRender)
            StateHasChanged();
    }

    private async Task HandleLogin()
    {
        try
        {
            var loginData = new { accounts_email = username, accounts_password = password };
            string test = JsonSerializer.Serialize(loginData);
            var response = await httpClient.PostAsJsonAsync("http://localhost:5005/api/Account/login", loginData);
            if (response != null)
            {
                if (response.IsSuccessStatusCode)
                {
                    errorMessage = null;
                    userData = JsonSerializer.Deserialize<Dictionary<string, string>>(await response.Content.ReadAsStringAsync());
                    try
                    {
                        ValueTask success = MySession.SetAsync("user", userData);
                        Navman.NavigateTo("/");
                    }
                    catch (Exception ex)
                    {
                        errorMessage_Session = "An error occurred: " + ex.Message;
                    }
                }
                //switch case to deal with different status codes
                //will not enter switch case if successful transaction
                else
                {
                    switch (response.StatusCode)
                    {
                        case System.Net.HttpStatusCode.Unauthorized:
                            errorMessage = "Incorrect username or password";
                            userData = null;
                            break;

                        default:
                            errorMessage = "Unknown error has occurred";
                            userData = null;
                            break;
                    }
                }
            }
            else 
            {
                throw new Exception("Could not receive response from API");
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred: " + ex.Message;
            userData = null;
        }
    }
}
