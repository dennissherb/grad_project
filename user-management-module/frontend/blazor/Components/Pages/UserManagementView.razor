@page "/manage/user"

@rendermode InteractiveServer
@attribute [StreamRendering(true)]

@using System.Text.Json
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject HttpClient httpClient
@inject Dictionary<string,string> userData
@inject ProtectedSessionStorage MySession
@inject NavigationManager Navman

@if (accountsTable != null && accountsTable.Any())
{
    <p color="red">@errMessage</p>
    <table class="table">
        <thead>
            <tr>
                @foreach (var key in accountsTable.First().Keys)
                {
                    if (key != "accounts_id")
                    {
                        <th>@key</th>
                    }
                }
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in accountsTable)
            {
                <tr>
                    @foreach (var keyValuePair in data)
                    {
                        if (keyValuePair.Key != "accounts_id")
                        {
                            <td>@keyValuePair.Value</td>
                        }
                    }
                    <td>
                        <button @onclick="() => DeleteElementAsync(data)">Delete</button>
                        <button >Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No data to display</p>
}


@code {
    List<Dictionary<string, string>> accountsTable;
    string errMessage;
    protected override async Task OnInitializedAsync()
    {
        accountsTable = await httpClient.GetFromJsonAsync<List<Dictionary<string, string>>>("http://localhost:5005/api/Account/GetEntireTable");
        StateHasChanged();
    }

    private async Task DeleteElementAsync(Dictionary<string,string> user)
    {
        var response = await httpClient.PostAsJsonAsync("http://localhost:5005/api/Account/delete_as_admin", user);
        StateHasChanged();
        if (!response.IsSuccessStatusCode)
        {
            errMessage = $"{response.StatusCode}";
        }
        else 
        {
            errMessage = "Deletion successful";
            await OnInitializedAsync();
        };
    }
}
