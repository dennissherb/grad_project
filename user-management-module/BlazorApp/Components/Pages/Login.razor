@page "/login"
@rendermode InteractiveServer
@using QueryClasses 
@inject Dictionary<string, string> Account
@inject NavigationManager navman
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage MySession


<h3>Login</h3>
<div>
    <label>Email:</label>
    <input @bind-value="@email" @bind-value:event="onchange"/>
</div>

<div>
    <label>Password:</label>
    <input @bind-value="@password" @bind-value:event="onchange" type="password" />
</div>

<button @onclick="AttemptTryLogin" class="btn btn-primary">Login</button>
@password
@email

@if (loginFailed)
{
    <p>Login failed. Please check your credentials.</p>
}

@code {
    private string Message {get;set;} = "";
    public string email = "john.doe@gmail.com";
    public string password = "password123";
    public bool loginFailed = false;

    public async Task AttemptTryLogin()
    {
        Console.WriteLine("started checking");
        bool isauthenticated = await AccountQuery.TryLogin(email, password);

        if (isauthenticated)
        {
            Account = await AccountQuery.ReadAccountByEmail(email);
            MySession.SetAsync("LoggedUser", Account);
            navman.NavigateTo("/content");
        }
        else
        {
            // login failed, show error message
            loginFailed = true;
        } 
    }
}
