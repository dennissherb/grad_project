// <auto-generated />
using System;
using Datalayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Datalayer.Migrations
{
    [DbContext(typeof(MyProjectContext))]
    partial class MyProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataObjects.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("accounts_id");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("accounts_date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("accounts_email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("accounts_password");

                    b.Property<string>("PermGroup")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("accounts_perm_group");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("accounts_salt_column");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("accounts_user_name");

                    b.HasKey("Id");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("DataObjects.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pages_id");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("pages_author_id");

                    b.Property<string>("Content")
                        .HasColumnType("longtext")
                        .HasColumnName("pages_content");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("fkproducts_id");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext")
                        .HasColumnName("pages_tags");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pages_type");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ProductId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("DataObjects.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("products_id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("products_category");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("products_company");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob")
                        .HasColumnName("products_image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("products_name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("products_price");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataObjects.Page", b =>
                {
                    b.HasOne("DataObjects.Account", "Account")
                        .WithMany("Pages")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataObjects.Product", "Product")
                        .WithMany("Pages")
                        .HasForeignKey("ProductId");

                    b.Navigation("Account");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataObjects.Account", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("DataObjects.Product", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
